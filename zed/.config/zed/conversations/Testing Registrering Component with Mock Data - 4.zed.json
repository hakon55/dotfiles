{"id":"a1da05ef-dade-4f21-a2f2-121b137b27d7","zed":"context","version":"0.4.0","text":"\n\n\n\n```tsx shai-vip/src/web/routes/registrering/__tests__/Registrering.test.tsx\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { render, screen } from \"@testing-library/react\";\nimport { setupServer } from \"msw/node\";\nimport { describe } from \"vitest\";\n\nimport { Registrering } from \"../Registrering\";\nimport { queryClient } from \"web/felles/queryClient\";\nimport { registreringHandlers } from \"./handlers\";\n\nbeforeEach(() => {\n  render(\n    <QueryClientProvider client={queryClient}>\n      <Registrering />\n    </QueryClientProvider>,\n  );\n});\n\ndescribe(\"Registrering-komponent renderer riktig\", () => {\n  test(\"Renderer breadcrumbs, søkefelter og søkeresultat-overskrift\", () => {\n    expect(screen.getByText(\"Registrering\")).toBeInTheDocument();\n    expect(screen.getByText(\"Søkeresultat\")).toBeInTheDocument();\n    expect(screen.getByLabelText(\"Navn\")).toBeInTheDocument();\n    expect(screen.getByLabelText(\"Fødselsår (valgfritt)\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"søk-knapp\")).toBeInTheDocument();\n  });\n\n  test(\"Søkeresultat og Modal renderer ikke  uten data\", () => {\n    expect(screen.findByTestId(\"søk-resultat-tabell\")).not.toBeInTheDocument();\n  });\n});\n\ndescribe(\"Registrering med data fra API mock\", () => {\n  const server = setupServer(...registreringHandlers);\n  beforeAll(() => server.listen());\n  afterEach(() => server.resetHandlers());\n  afterAll(() => server.close());\n});\n```\n```tsx\n\n  test(\"Søkeresultat og Modal renderer ikke  uten data\", () => {\n    expect(screen.findByTestId(\"søk-resultat-tabell\")).not.toBeInTheDocument();\n// error: Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.\n  });\n});\n```\n\nHow to test for somethin to being in document\nexpect(screen.findByTestId(\"søk-resultat-tabell\")).not.toBeInTheDocument();\n\nThe error you're encountering is due to the fact that `findByTestId` returns a promise, which needs to be awaited when used in Jest tests. You can handle this by using an async function and awaiting the result of `findByTestId`. Here's how you can modify your test:\n\n```tsx\ndescribe(\"Registrering-komponent renderer riktig\", () => {\n  // ... other tests ...\n\n  test(\"Søkeresultat og Modal renderer ikke uten data\", async () => {\n    const element = await screen.findByTestId(\"søk-resultat-tabell\");\n    expect(element).not.toBeInTheDocument();\n  });\n});\n```\n\nIn this updated test, `await screen.findByTestId(\"søk-resultat-tabell\")` waits for the element with the specified test ID to appear in the document. The `expect(element).not.toBeInTheDocument()` assertion then checks that the element is not present.\n\nIf you expect the element to potentially be rendered later (for example, after a user interaction), you can use `waitFor` instead of `findByTestId`. Here's how you can do it:\n\n```tsx\ndescribe(\"Registrering-komponent renderer riktig\", () => {\n  // ... other tests ...\n\n  test(\"Søkeresultat og Modal renderer ikke uten data\", async () => {\n    await waitFor(() =>\n      expect(screen.queryByTestId(\"søk-resultat-tabell\")).not.toBeInTheDocument()\n    );\n  });\n});\n```\n\nIn this case, `waitFor` will wait for up to the default timeout (usually 5 seconds) for the condition inside the callback function to be true. If the condition is not met within that time, a failure message will be displayed.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":15062}}},{"id":{"replica_id":0,"value":32},"start":1834,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":15063}}},{"id":{"replica_id":0,"value":59},"start":1912,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":15064}}},{"id":{"replica_id":0,"value":60},"start":3419,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":15065}}}],"summary":"Testing Registrering Component with Mock Data","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":4,"end":1787},"icon":"File","label":"shai-vip/src/web/routes/registrering/__tests__/Registrering.test.tsx","metadata":{"path":"shai-vip/src/web/routes/registrering/__tests__/Registrering.test.tsx"}},{"range":{"start":1444,"end":1786},"icon":"XCircle","label":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","metadata":null}]}